// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ScheduleService.Infrastructure.Persistence;

#nullable disable

namespace ScheduleService.Migrations
{
    [DbContext(typeof(ScheduleDbContext))]
    partial class ScheduleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ScheduleService.Domain.Entities.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime>("EndDatetime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDatetime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDatetime = new DateTime(2025, 3, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("11111111-1111-1111-1111-111111111111"),
                            StartDatetime = new DateTime(2025, 3, 3, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = new Guid("11111111-1111-1111-1111-111111111111"),
                            TicketPrice = 35000m,
                            UpdatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDatetime = new DateTime(2025, 3, 3, 13, 20, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("22222222-2222-2222-2222-222222222222"),
                            StartDatetime = new DateTime(2025, 3, 3, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = new Guid("22222222-2222-2222-2222-222222222222"),
                            TicketPrice = 30000m,
                            UpdatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDatetime = new DateTime(2025, 3, 3, 15, 30, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("33333333-3333-3333-3333-333333333333"),
                            StartDatetime = new DateTime(2025, 3, 3, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = new Guid("22222222-2222-2222-2222-222222222222"),
                            TicketPrice = 40000m,
                            UpdatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDatetime = new DateTime(2025, 3, 3, 14, 10, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("44444444-4444-4444-4444-444444444444"),
                            StartDatetime = new DateTime(2025, 3, 3, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = new Guid("11111111-1111-1111-1111-111111111111"),
                            TicketPrice = 35000m,
                            UpdatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndDatetime = new DateTime(2025, 3, 3, 15, 50, 0, 0, DateTimeKind.Unspecified),
                            MovieId = new Guid("66666666-6666-6666-6666-666666666666"),
                            StartDatetime = new DateTime(2025, 3, 3, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            StudioId = new Guid("33333333-3333-3333-3333-333333333333"),
                            TicketPrice = 35000m,
                            UpdatedAt = new DateTime(2025, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
